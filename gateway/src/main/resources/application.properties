spring.application.name=gateway
server.port=9080

eureka.client.service-url.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}

#spring.cloud.gateway.routes[0].id=module1
#spring.cloud.gateway.routes[0].uri=http://localhost:8080/
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/module1/**
#spring.cloud.gateway.routes[1].id=module2
#spring.cloud.gateway.routes[1].uri=http://localhost:8081/
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/module2/**
#spring.cloud.gateway.routes[2].id=module3
#spring.cloud.gateway.routes[2].uri=http://localhost:8082/
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/module3/**

spring.security.oauth2.client.registration.gateway.provider=uaa
spring.security.oauth2.client.registration.gateway.client-id=gateway
spring.security.oauth2.client.registration.gateway.client-secret=secret
spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gateway.redirect-uri="{baseUrl}/login/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.gateway.scope=openid,profile,email,resource.read

spring.security.oauth2.client.provider.uaa.authorization-uri=http://localhost:8090/uaa/oauth/authorize
spring.security.oauth2.client.provider.uaa.token-uri=http://uaa:8090/uaa/oauth/token
spring.security.oauth2.client.provider.uaa.user-info-uri=http://uaa:8090/uaa/info
spring.security.oauth2.client.provider.uaa.user-name-attribute=sub
spring.security.oauth2.client.provider.uaa..jwk-set-uri=http://uaa:8090/uaa/token_keys
